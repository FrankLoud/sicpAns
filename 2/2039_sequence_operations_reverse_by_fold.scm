(define (reverse1 sequence)
  (fold-right (lambda (x y) (add-at-end x y)) '() sequence))
(define (add-at-end x seq)
  (define (cons-iter rest)
    (if (null? rest)
        (cons x '())
	(cons (car rest) (cons-iter (cdr rest)))))
  (cons-iter seq))
(define (reverse2 sequence)
  (fold-left (lambda (x y) (cons y x)) '() sequence))
